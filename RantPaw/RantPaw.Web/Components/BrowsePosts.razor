@inject IPostService PostService


<h3>BrowsePosts</h3>

@if (isLoading)
{
	<div class="spinner-border" role="status">
		<span class="visually-hidden">Loading...</span>
	</div>
}
@if (isLoadedSuccessfully)
{
	<ul>
		@foreach (var post in response.Data!)
		{
			<li class="browse-post-list-item">
				<div class="browse-post-item-container">
					<div class="browse-post-image-quote-container">
						<div class="browse-post-image-container">
							<img src="/images/bulldog.jpg" class="rounded float-start browse-post-image" alt="dog-image">
						</div>
						<div class="browse-post-paragraph">
							<p>@post.Description</p>

						</div>
					</div>
					<div class="browse-post-author">
						<span> ~ @post.AuthorName</span>
					</div>
				</div>
			</li>
		}
	</ul>

	<div class="btn-toolbar mb-3" role="toolbar" aria-label="Toolbar with button groups">
		<div class="btn-group me-2" role="group" aria-label="First group">

			@if (startingNumber - 3 >= 1)
			{
				<button type="button" class="btn btn-outline-secondary" @onclick="()=>FetchPosts(startingNumber,3,false)"><i class="bi bi-arrow-left"></i>Prev</button>
			}
			@if (startingNumber + 3 <= numberOfPosts)
			{

				<button type="button" class="btn btn-outline-secondary" @onclick="()=>FetchPosts(startingNumber,3,true)"><i class="bi bi-arrow-right"></i>Next</button>
			}

		</div>
	</div>



}


@code {

	ServiceResponse<List<GetPostDTO>> response = new();
	private bool isLoaded = false;
	private bool isLoading = false;
	private bool isLoadedSuccessfully = false;
	private string responseMessage = string.Empty;
	private int numberOfPosts;
	private int startingNumber = 1;

	protected override async Task OnInitializedAsync()
	{
		isLoading = true;
		var numberOfPostsResponse = await PostService.GetPostsCount();
		numberOfPosts = numberOfPostsResponse.Data;

		await FetchPosts(1, 3, true);

	}

	protected async Task FetchPosts(int startingRow, int numberOfRows, bool next)
	{




		response = await PostService.GetAllBetween(startingRow, numberOfRows);

		if (response.IsSuccessful)
		{
			isLoaded = true;
			isLoading = false;
			isLoadedSuccessfully = true;
		}
		else
		{
			isLoaded = true;
			isLoading = false;
			isLoadedSuccessfully = false;
			responseMessage = response.Message;
		}
		if (next)
		{
			if (startingNumber + 3 <= numberOfPosts) startingNumber += 3;
		}
		else
		{
			if (startingNumber - 3 >= 1) startingNumber -= 3;
		}
		StateHasChanged();
	}

}
